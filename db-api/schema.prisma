datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/// Servers that polaroids has been added to
model Guild {
    guildId String @id @db.VarChar(255)/// The server ID, supplied by Discord API
    addedAt DateTime @default(now()) @db.Timestamp() /// When polaroids was added to the server
    album Album? /// The album associated with the server
    subscribedChannels SubscribedChannel[] /// Channels that polaroids watches for updates
}

/// Albums that correspond to existing albums in PhotoStation6
model Album {
    albumId String @unique @db.VarChar(255) /// The album's PhotoStation6 ID
    albumName String @unique @db.VarChar(255) /// The name of the album
    deletedAt DateTime? @db.Timestamp() /// When the album was soft deleted
    images Image[]

    guildId String @id /// The id of the guild this album is associated with
    guild Guild @relation(fields: [guildId], references: [guildId])
}

/// Channels within Discord servers that polaroids watches for updates
model SubscribedChannel {
  channelId String @id @db.VarChar(255) /// The channel ID, supplied by the Discord API

  guildId String /// The id of the guild this channel is associated with
  guild Guild @relation(fields: [guildId], references: [guildId])
}


/// Images that correspond to to images saved to PhotoStation6
model Image {
  imageId String @id @db.VarChar(255) /// The image's PhotoStation6 ID
  deletedAt DateTime? @db.Timestamp() /// When the image was soft deleted
  description String? @db.VarChar(255) /// A description of the image

  albumId String /// The ID of the album the image is in
  album Album @relation(fields: [albumId], references: [albumId])
}
