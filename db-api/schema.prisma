datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

generator zod {
  provider = "zod-prisma-types"
}

/// Servers that polaroids has been added to
model Guild {
  guildId String @id @db.VarChar(255)/// The server ID, supplied by Discord API
  createdAt DateTime @default(now()) @db.Timestamp() /// When polaroids was added to the server
  subscribedChannels SubscribedChannel[] /// Channels that polaroids watches for updates
}

/// Albums that correspond to existing folders in FileStation.
model Album {
  name String @unique @db.VarChar(255) /// The name of the folder on FileStation
  description String @db.VarChar(255) /// The album's description
  createdAt DateTime @default(now()) @db.Timestamp() /// When the file was uploaded

  media File[] /// The media in this album
  channels SubscribedChannel[] /// The channels this album is associated with
}

/// Channels within Discord servers that polaroids watches for updates
model SubscribedChannel {
  channelId String @id @db.VarChar(255) /// The channel ID, supplied by the Discord API
  createdAt DateTime @default(now()) @db.Timestamp() /// When the file was uploaded

  guildId String /// The id of the guild this channel is associated with
  guild Guild @relation(fields: [guildId], references: [guildId], onDelete: Cascade)

  albumName String /// The id of the album this channel is associated with
  album Album @relation(fields: [albumName], references: [name], onDelete: Cascade)
}


/// Corresponds to images/videos saved to FileStation
model File {
  fileId String @id @db.VarChar(255) /// The file's id
  fileName String @db.VarChar(255) /// The file's name
  description String? @db.VarChar(255) /// A description of the photo/video
  createdAt DateTime @default(now()) @db.Timestamp() /// When the file was uploaded

  albumName String /// The name of the album the photo/video is in
  album Album @relation(fields: [albumName], references: [name], onDelete: Cascade)
}